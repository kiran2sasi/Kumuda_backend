/* eslint-disable */
// tslint:disable
/**
 * service
 * service
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express } from 'express'
import { Api } from '../../models'

export interface CoactivitiesApi {
	postCoactivitiesCreate: (request: Api.CoactivitiesDto | undefined) => Promise<PostCoactivitiesCreateResponse>
	deleteCoactivitiesDelete: (id: string) => Promise<DeleteCoactivitiesDeleteResponse>
	getCoactivitiesGet: (id: string) => Promise<GetCoactivitiesGetResponse>
	getCoactivitiesGetAll: (limit: number | null | undefined, direction: Api.DirectionParamEnum | undefined, sortByField: string | null | undefined) => Promise<GetCoactivitiesGetAllResponse>
	putCoactivitiesUpdate: (request: Api.CoactivitiesDto | undefined) => Promise<PutCoactivitiesUpdateResponse>
}

export type PostCoactivitiesCreateResponse = PostCoactivitiesCreate201Response | PostCoactivitiesCreate401Response | PostCoactivitiesCreate404Response | PostCoactivitiesCreate422Response

export interface PostCoactivitiesCreate201Response {
	status: 201
	body: Api.CoactivitiesDto
	headers?: never
}

export interface PostCoactivitiesCreate401Response {
	status: 401
	body: Api.MessageDto
	headers?: never
}

export interface PostCoactivitiesCreate404Response {
	status: 404
	body: Api.MessageDto
	headers?: never
}

export interface PostCoactivitiesCreate422Response {
	status: 422
	body: Api.MessageDto
	headers?: never
}

export type DeleteCoactivitiesDeleteResponse = DeleteCoactivitiesDelete200Response | DeleteCoactivitiesDelete401Response | DeleteCoactivitiesDelete404Response | DeleteCoactivitiesDelete422Response

export interface DeleteCoactivitiesDelete200Response {
	status: 200
	body: Api.MessageDto
	headers?: never
}

export interface DeleteCoactivitiesDelete401Response {
	status: 401
	body: Api.MessageDto
	headers?: never
}

export interface DeleteCoactivitiesDelete404Response {
	status: 404
	body: Api.MessageDto
	headers?: never
}

export interface DeleteCoactivitiesDelete422Response {
	status: 422
	body: Api.MessageDto
	headers?: never
}

export type GetCoactivitiesGetResponse = GetCoactivitiesGet200Response | GetCoactivitiesGet401Response | GetCoactivitiesGet404Response | GetCoactivitiesGet422Response

export interface GetCoactivitiesGet200Response {
	status: 200
	body: Api.CoactivitiesDto
	headers?: never
}

export interface GetCoactivitiesGet401Response {
	status: 401
	body: Api.MessageDto
	headers?: never
}

export interface GetCoactivitiesGet404Response {
	status: 404
	body: Api.MessageDto
	headers?: never
}

export interface GetCoactivitiesGet422Response {
	status: 422
	body: Api.MessageDto
	headers?: never
}

export type GetCoactivitiesGetAllResponse = GetCoactivitiesGetAll200Response | GetCoactivitiesGetAll401Response | GetCoactivitiesGetAll404Response

export interface GetCoactivitiesGetAll200Response {
	status: 200
	body: Api.CoactivitiesPagedResultDto
	headers?: never
}

export interface GetCoactivitiesGetAll401Response {
	status: 401
	body: Api.MessageDto
	headers?: never
}

export interface GetCoactivitiesGetAll404Response {
	status: 404
	body: Api.MessageDto
	headers?: never
}

export type PutCoactivitiesUpdateResponse = PutCoactivitiesUpdate200Response | PutCoactivitiesUpdate401Response | PutCoactivitiesUpdate404Response | PutCoactivitiesUpdate422Response

export interface PutCoactivitiesUpdate200Response {
	status: 200
	body: Api.CoactivitiesDto
	headers?: never
}

export interface PutCoactivitiesUpdate401Response {
	status: 401
	body: Api.MessageDto
	headers?: never
}

export interface PutCoactivitiesUpdate404Response {
	status: 404
	body: Api.MessageDto
	headers?: never
}

export interface PutCoactivitiesUpdate422Response {
	status: 422
	body: Api.MessageDto
	headers?: never
}

